=============================
The ``2-matrix_divided`` module
=============================

Using ``matrix_divided``
---------------------

>>> matrix_divided = __import__('2-matrix_divided').matrix_divided
>>> matrix = [
...     [10, 20, 30],
...     [40, 50, 60],
...     [70, 80, 90]
... ]
>>> div = 3
>>> matrix_divided(matrix, div)
[[3.33, 6.67, 10.0], [13.33, 16.67, 20.0], [23.33, 26.67, 30.0]]

>>> matrix = [
...     [10.5, 20.6],
...     [30.7, 40.8]
... ]
>>> div = 2
>>> matrix_divided(matrix, div)
[[5.25, 10.3], [15.35, 20.4]]

# Test with different divisor
>>> matrix = [
...     [5, 10],
...     [15, 20]
... ]
>>> div = 5
>>> matrix_divided(matrix, div)
[[1.0, 2.0], [3.0, 4.0]]

# Test with zero divisor
>>> matrix = [
...     [5, 10],
...     [15, 20]
... ]
>>> div = 0
>>> matrix_divided(matrix, div)
Traceback (most recent call last):
    ...
ZeroDivisionError: division by zero

# Test with non-number in matrix
>>> matrix = [
...     [5, "hello"],
...     [15, 20]
... ]
>>> div = 2
>>> matrix_divided(matrix, div)
Traceback (most recent call last):
    ...
TypeError: matrix must be a matrix (list of lists) of integers/floats

# Test with rows of different sizes
>>> matrix = [
...     [5, 10],
...     [15, 20, 25]
... ]
>>> div = 2
>>> matrix_divided(matrix, div)
Traceback (most recent call last):
    ...
TypeError: Each row of the matrix must have the same size

# Test with non-number divisor
>>> matrix = [
...     [5, 10],
...     [15, 20]
... ]
>>> div = "world"
>>> matrix_divided(matrix, div)
Traceback (most recent call last):
    ...
TypeError: div must be a number
